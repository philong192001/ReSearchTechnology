// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NugetPrivateTest.ContextTest;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace NugetPrivateTest.Migrations
{
    [DbContext(typeof(UserContext))]
    partial class UserContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NugetPrivateTest.ContextTest.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MyProperty")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Name")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("NugetPrivateTest.ContextTest.User", b =>
                {
                    b.OwnsOne("NugetPrivateTest.ContextTest.Address", "Address", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("NUMBER(10)");

                            b1.Property<int>("Id")
                                .HasColumnType("NUMBER(10)");

                            b1.Property<int>("MyProperty")
                                .HasColumnType("NUMBER(10)");

                            b1.HasKey("UserId");

                            b1.ToTable("users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Address")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
